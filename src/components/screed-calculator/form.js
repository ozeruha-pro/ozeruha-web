import { Alert, Button, Modal, Input, Select } from 'antd'
import { UserOutlined, PhoneOutlined } from '@ant-design/icons'
import React, { useState } from 'react'
import sendLead from '../../utils/tg-lead'
import * as styles from './form.module.css'

const { Option } = Select

const CITIES = {
  KYIV: '–º. –ö–∏—ó–≤',
  KYIV_REGION: '–ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å',
  OTHER_REGION: '–Ü–Ω—à–∞ –æ–±–ª–∞—Å—Ç—å',
}

const success = () => {
  Modal.success({
    title: '–î—è–∫—É—é!',
    content: '–í–∞—à—É –∑–∞—è–≤–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ. –ù–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –º–∏ –∑ –í–∞–º–∏ –∑–≤‚Äô—è–∂–µ–º–æ—Å—å.',
    okText: '–î–æ–±—Ä–µ',
    centered: true,
  })
}

const CalculatorForm = ({
  height,
  square,
  workPriceSum,
  workPriceWithMaterialsSum,
}) => {
  const [modalVisible, setModalVisible] = useState(false)
  const [loading, setLoading] = useState(false)

  const [name, setName] = useState()
  const [phone, setPhone] = useState()
  const [city, setCity] = useState(CITIES.KYIV)

  const handleCancel = () => {
    setModalVisible(false)
  }

  const handleOk = async () => {
    if (phone) {
      setLoading(true)

      await sendLead({
        message: `–°—Ç—è–∂–∫–∞ ${square}–º¬≤, ${height}—Å–º. –†–æ–±–æ—Ç–∞ ${workPriceSum}–≥—Ä–Ω, —Ä–æ–±–æ—Ç–∞ –∑ –º–∞—Ç–µ—Ä—ñ–∞–ª–∞–º–∏ ${workPriceWithMaterialsSum}–≥—Ä–Ω. ${city}.`,
        phone,
        name,
        form: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç—è–∂–∫–∏ üë∑üèª‚Äç‚ôÇÔ∏è',
      })

      setLoading(false)
      setModalVisible(false)

      if(typeof window.gtag !== 'undefined') {
        window.gtag('event', 'form', {
          action: 'send',
          label: 'screed calculator order',
        })
      }

      success()
    }
  }

  return (
    <>
      <Button
        type="primary"
        onClick={() => setModalVisible(true)}
        className={styles.button}
      >
        –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑–∞—è–≤–∫—É –ø—Ä–æ—Ä–∞–±—É
      </Button>
      <Modal
        title={`–í–∞—à–∞ —Å—Ç—è–∂–∫–∞ ${square} –º¬≤, ${height} —Å–º`}
        centered
        visible={modalVisible}
        onOk={handleOk}
        onCancel={handleCancel}
        footer={[
          <Button key="back" onClick={handleCancel}>
            –ó–∞–∫—Ä–∏—Ç–∏
          </Button>,
          <Button
            key="submit"
            type="primary"
            loading={loading}
            onClick={handleOk}
          >
            –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏
          </Button>,
        ]}
      >
        <Input
          prefix={<UserOutlined className="site-form-item-icon" />}
          placeholder="–í–∞—à–µ —ñ–º'—è"
          name="name"
          size="large"
          value={name}
          onChange={(e) => setName(e.target.value)}
        />
        <br />
        <br />
        <Input
          prefix={<PhoneOutlined className="site-form-item-icon" />}
          placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"
          name="phone"
          type="tel"
          size="large"
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
        />
        <br />
        <br />
        <Select
          defaultValue={city}
          style={{ width: '100%' }}
          onChange={(value) => setCity(value)}
        >
          <Option value={CITIES.KYIV}>{CITIES.KYIV}</Option>
          <Option value={CITIES.KYIV_REGION}>{CITIES.KYIV_REGION}</Option>
          <Option value={CITIES.OTHER_REGION}>{CITIES.OTHER_REGION}</Option>
        </Select>
        <br />
        <br />
        <Input prefix="‚Ç¥" value={workPriceSum} suffix="—Ä–æ–±–æ—Ç–∞" disabled />
        <br />
        <br />
        <Input
          prefix="‚Ç¥"
          value={workPriceWithMaterialsSum}
          suffix="—Ä–æ–±–æ—Ç–∞ –∑ –º–∞—Ç–µ—Ä—ñ–∞–ª–∞–º–∏"
          disabled
        />
        <br />
        <br />
        {city !== '–º. –ö–∏—ó–≤' && (
          <Alert
            message="–ù–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–∞–∫–æ–∂ –≤–ø–ª–∏–≤–∞—î –¥–∞–ª—å–Ω—ñ—Å—Ç—å —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –æ–±'—î–∫—Ç—É –≤—ñ–¥ –ö–∏—î–≤–∞!"
            type="warning"
            showIcon
            closable
          />
        )}
      </Modal>
    </>
  )
}

export default CalculatorForm
